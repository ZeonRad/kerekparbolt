openapi: "3.1.0"
info:
  title: Kerékpárbolt API
  version: 1.0.0

servers:
  - url: http://backend.vm1.test
    description: VM1 backend
  - url: http://backend.vm2.test
    description: VM2 backend
  - url: http://backend.vm3.test
    description: VM3 backend
  - url: http://backend.vm4.test
    description: VM4 backend
  - url: http://backend.vm5.test
    description: VM5 backend

paths:
  /api/bicycles:
    get:
      tags:
       - Bicycles
      summary: Kerékpárok listájának lekérése
      description: |
        Az `index` visszaadja a kerékpárok adatait a minta szerint
      responses:
        '200':
          description: Kerékpárok listája
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bicycle'
              example:
                data:
                  - id: 1
                    name: MTB kerékpár ST 530 S, 27,5”, fekete, piros
                    wheel_size: 27
                    gears: 9
                    sex: férfi
                    type: MTB
                    size: S
                    color: fekete, piros
                  - id: 2
                    name: MTB kerékpár ST 530 S, 27,5”, fekete, piros
                    wheel_size: 27
                    gears: 9
                    sex: férfi
                    type: MTB
                    size: M
    post:
      tags:
       - Bicycles
      summary: Új kerékpár létrehozása
      description: |

        A `store` feladata, hogy a JSON-ként kapott adatokat validálja, majd eltárolja az adatbázisba. A létrehozott új rekordot adja is vissza a minta szerint!

        A kerékpárok tárolása során végezze el az alábbi ellenőrzéseket:

          - A `name`, `wheel_size`, `gears`, `sex`, `type`, `manufacturer_id` mezők kitöltése **kötelező**.
          - A `size`, és a `color` mezők kitöltése **opcionális**.
          - A `name`,`sex`,`type`,`size`,`color` mezők csak **szövegek** lehetnek.
          - A `sex` és a `type` mezők kivételével biztosítse minden szöveges mezőről, a hosszuk nem haladja meg az adatbázisban meghatározott **maximális méretet**.
          - A `wheel_size`,`gears`,`manufacturer_id` mezők értéke  csak **szám** lehet
          - A `gears` és a `manufacturer_id` csak **egész szám** lehet.
          - A `gears` értéke `1` és `30` között legyen.
          - A `sex` értéke csak *"férfi"*, *"női"*, vagy *"unisex"* lehet
          - A `type` értéke csak *"MTB"*, *"városi"*, *"országúti"*, vagy *"cross"* lehet.
          - A `manufacturer_id` érteke csak olyan lehet, ami szerepel a `manufacturer` tábla `id` mezőjében.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bicycle'
            example:
              name: MTB kerékpár ST 530 S, 27,5”, ezüst, kék
              wheel_size: 27
              gears: 21
              sex: férfi
              type: MTB
              size: L
              color: ezüst, kék
              manufacturer_id: 1
      responses:
        '201':
          description: Kerékpár létrehozva
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bicycle'
              example:
                data:
                  id: 999
                  name: MTB kerékpár ST 530 S, 27,5”, ezüst, kék
                  wheel_size: 27
                  gears: 21
                  sex: férfi
                  type: MTB
                  size: L
                  color: ezüst, kék
        '422':
          description: Érvénytelen adatok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
  /api/bicycles/{bicycle}:
    get:
      tags:
       - Bicycles
      summary: Egy adott kerékpár lekérése
      description: |
        A `show` a kerékpár azonosítója alapján keresse meg a megfelelő rekordot, és adja vissza az adatokat a minta szerint
      parameters:
        - name: bicycle
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Egy adott kerékpár
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bicycle'
              example:
                data:
                  id: 4
                  name: MTB kerékpár ST 530 S, 27,5”, fekete, piros
                  wheel_size: 27
                  gears: 9
                  sex: férfi
                  type: MTB
                  size: XL
                  color: fekete, piros
    put:
      tags:
       - Bicycles
      summary: Egy adott kerékpár frissítése
      description: |

        Az `update` feladata, hogy a JSON-ként kapott adatokat validálja,
        majd tejes egészében cserélje le az adatbázisban található adatokat.
        
        A módosított rekordot adja is vissza a minta szerint!

        A kerékpárok módosítása során végezze el az alábbi ellenőrzéseket:

          - A `name`, `wheel_size`, `gears`, `sex`, `type`, `manufacturer_id` mezők kitöltése **kötelező**.
          - A `size`, és a `color` mezők kitöltése **opcionális**.
          - A `name`,`sex`,`type`,`size`,`color` mezők csak **szövegek** lehetnek.
          - A `sex` és a `type` mezők kivételével biztosítse minden szöveges mezőről, a hosszuk nem haladja meg az adatbázisban meghatározott **maximális méretet**.
          - A `wheel_size`,`gears`,`manufacturer_id` mezők értéke  csak **szám** lehet
          - A `gears` és a `manufacturer_id` csak **egész szám** lehet.
          - A `gears` értéke `1` és `30` között legyen.
          - A `sex` értéke csak *"férfi"*, *"női"*, vagy *"unisex"* lehet
          - A `type` értéke csak *"MTB"*, *"városi"*, *"országúti"*, vagy *"cross"* lehet.
          - A `manufacturer_id` érteke csak olyan lehet, ami szerepel a `manufacturer` tábla `id` mezőjében.
      parameters:
        - name: bicycle
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bicycle'
            example:
              name: MTB kerékpár ST 530 S, 26”, ezüst
              wheel_size: 26
              gears: 18
              sex: férfi
              type: MTB
              size: XXL
              color: ezüst
              manufacturer_id: 1
      responses:
        '200':
          description: Kerékpár frissítve
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bicycle'
              example:
                data:
                  id: 999
                  name: MTB kerékpár ST 530 S, 26”, ezüst
                  wheel_size: 26
                  gears: 18
                  sex: férfi
                  type: MTB
                  size: XXL
                  color: ezüst
        '422':
          description: Érvénytelen adatok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
    delete:
      tags:
       - Bicycles
      summary: Egy adott kerékpár törlése
      description: |
        A `destroy` törölje ki a megfelelő rekordot az adatbázisból az `id` alapján.
      parameters:
        - name: bicycle
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Kerékpár törölve
        '404':
          description: Nem található a keresett elem
        '500':
          description: Szerver hiba
  /api/manufacturers:
    get:
      tags:
       - Manufacturers
      summary: Gyártók listájának lekérése
      description: |
        Az `index` visszaadja a gyártó adatait a minta szerint.
      responses:
        '200':
          description: Gyártók listája
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Manufacturer'
              example:
                data:
                  - id: 1
                    name: Rockrider
                    website: https://www.decathlon.hu/
                  - id: 2
                    name: Elops
                    website: null
    post:
      tags:
       - Manufacturers
      summary: Új gyártó létrehozása
      description: |
        A `store` feladata, hogy a JSON-ként kapott adatokat validálja, majd eltárolja az adatbázisba.
        
        A létrehozott új rekordot adja is vissza a minta szerint!
        
        A gyártók tárolása során végezze el az alábbi ellenőrzéseket:

          - A `name` mező kitöltése **kötelező**.
          - A `website` mező kitöltése **opcionális**.
          - A `name`,`website` mezők csak **szövegek** lehetnek, továbbá  biztosítse, hogy a hosszuk nem haladja meg az adatbázisban meghatározott **maximális méretet**.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
            example:
              name: Merida
              website: https://www.merida-bikes.com/en-gb
      responses:
        '201':
          description: Gyártó létrehozva
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
              example:
                data:
                  id: 7
                  name: Merida
                  website: https://www.merida-bikes.com/en-gb
  /api/manufacturers/{manufacturer}:
    get:
      tags:
       - Manufacturers
      summary: Egy adott gyártó lekérése
      description: |
        A `show` a gyártó azonosítója alapján keresse meg a megfelelő rekordot,
        és adja vissza az adaokat a minta szerint.
      parameters:
        - name: manufacturer
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Egy adott gyártó
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
              example:
                data:
                  id: 4
                  name: Kruz Bike Company
                  website: https://kruzbike.com/
    put:
      tags:
       - Manufacturers
      summary: Egy adott gyártó frissítése
      
      description: |
        Az `update` feladata, hogy a JSON-ként kapott adatokat validálja,
        majd tejes egészében cserélje le az adatbázisban található adatokat.
        
        A módosított rekordot adja is vissza a minta szerint!

        A gyártók módosítása során végezze el az alábbi ellenőrzéseket:

          - A `name` mező kitöltése **kötelező**.
          - A `website` mező kitöltése **opcionális**.
          - A `name`,`website` mezők csak **szövegek** lehetnek, továbbá  biztosítse, hogy a hosszuk nem haladja meg az adatbázisban meghatározott **maximális méretet**.
      parameters:
        - name: manufacturer
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
            example:
              name: Merida
              website: https://www.merida-bikes.com/en-gb
      responses:
        '200':
          description: Gyártó frissítve
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Manufacturer'
              example:
                data:
                  id: 7
                  name: Merida
                  website: https://www.merida-bikes.com/en-gb
    delete:
      tags:
       - Manufacturers
      summary: Egy adott gyártó törlése
      description: |
        A `destroy` törölje ki a megfelelő rekordot az adatbázisból az `id` alapján. 
      parameters:
        - name: manufacturer
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Gyártó törölve
        '404':
          description: Nem található a keresett elem
        '500':
          description: Szerver hiba
components:
  schemas:
    Manufacturer:
      type: object
      properties:
        id:
          type: integer
          description: A gyártó azonosítója
        name:
          type: string
          maxLength: 20
          description: A gyártó neve
        website:
          type: string
          maxLength: 255
          description: Hivatkozás a gyártó weboldalára
    Bicycle:
      type: object
      properties:
        id:
          type: integer
          description: A kerékpár azonosítója
        name:
          type: string
          maxLength: 80
          description: A kerékpár neve
        wheel_size:
          type: number
          format: float
          description: A kerék mérete
        gears:
          type: integer
          description: A váltó sebesség fokozatainak száma
        sex:
          type: string
          maxLength: 10
          description: Kiknek tervezték a kerékpárt, értéke férfi, női, vagy unisex lehet
        type:
          type: string
          maxLength: 10
          description: A kerékpár típusa, értéke MTB, városi, országúti, vagy cross lehet
        size:
          type: string
          maxLength: 10
          description: A kerékpár mérete
       